# This file contains common pin mappings for the BIGTREETECH SKR mini
# E3 v3.0. To use this config, the firmware should be compiled for the
# STM32G0B1 with a "8KiB bootloader" and USB communication.

# The "make flash" command does not work on the SKR mini E3. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the SKR
# mini E3 with that SD card.

# See docs/Config_Reference.md for a description of parameters.

[include mainsail.cfg]

[include KAMP_Settings.cfg]

[stepper_x]
step_pin: PF13
dir_pin: !PF12
enable_pin: !PF14
microsteps: 16
rotation_distance: 40
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_endstop: 235
position_max: 235
homing_speed: 40
homing_retract_dist: 0

[stepper_y]
step_pin: PG0
dir_pin: !PG1
enable_pin: !PF15
microsteps: 16
rotation_distance: 40
endstop_pin: tmc2209_stepper_y:virtual_endstop
position_endstop: 245
position_max: 245
homing_speed: 40
homing_retract_dist: 0

[stepper_z]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
microsteps: 16
rotation_distance: 3.8
endstop_pin: probe:z_virtual_endstop
homing_speed: 5
second_homing_speed: 3  #set this to 3 if homing with collision
homing_retract_speed: 2
homing_retract_dist:5
#position_endstop: 0.0
position_max: 250
position_min: 0

[tmc2209 stepper_x]
uart_pin: PC4
diag_pin: PG6
run_current: 1.41
#stealthchop_threshold: 9999999
driver_SGTHRS: 70

[tmc2209 stepper_y]
uart_pin: PD11
diag_pin: PG9
run_current: 1.41
#stealthchop_threshold: 999999
driver_SGTHRS: 80

[tmc2209 stepper_z]
uart_pin: PC6
diag_pin: PG10
run_current: 0.580
stealthchop_threshold: 999999
diag_pin: PG10

[extruder]
step_pin: PF9
dir_pin: !PF10
enable_pin: !PG2
microsteps: 16
rotation_distance: 22.82863107
gear_ratio: 50:8
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA2 # HE0
sensor_pin:  PF4 # T0
sensor_type: EPCOS 100K B57560G104F
#control: pid
#pid_Kp: 21.527
#pid_Ki: 1.063
#pid_Kd: 108.982
min_temp: 0
max_temp: 300
max_extrude_only_distance: 101
pressure_advance: .05

[tmc2209 extruder]
uart_pin: PE4
run_current: 0.650
#stealthchop_threshold: 999999
#interpolate: True

[heater_bed]
heater_pin: PA3
sensor_pin: PF3 # TB
sensor_type: ATC Semitec 104GT-2
control: pid
pid_Kp: 54.027
pid_Ki: 0.770
pid_Kd: 948.182
min_temp: 0
max_temp: 130

[idle_timeout]
timeout: 1800 # timeout in seconds (1800 = 30 minutes)

[fan_generic nevermoreV6]
pin: PD13

[heater_fan heatbreak_cooling_fan]
pin: PA8

[controller_fan stepper_fan]
pin: PD14
max_power: .7

[fan_generic bed_fan]
pin: PD12

[fan_generic controller_fan]
pin: PD15
max_power:0.8

[fan]
pin: PE5

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100


[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_240032001651313031373931-if00

# MACROS - - - - - - - - - - - - - SECTION START

[gcode_macro START_PRINT]
gcode:
	EXCLUDE_OBJECT_DEFINE
    # Home the printer
    SET_FAN_SPEED FAN=nevermoreV6 SPEED=1
    G28
    # Heat Start
    {% set BED = params.BED|default(90)|float %}
    {% set EXTRUDER = params.EXTRUDER|default(220)|float %}
    # Start bed heating (but don't wait for it)
    M140 S{BED}
    # Use absolute coordinates
    G90
    # Move the nozzle near the bed
    G1 Z5 F3000
    
    # Wait for bed to reach temperature
    M190 S{BED}
    BED_MESH_CALIBRATE
    BED_MESH_PROFILE LOAD=default
    SMART_PARK
    # Set and wait for nozzle to reach temperature
    M109 S{EXTRUDER}
    #G1 X2 Y10 F3000
    #G1 Z0.28 F240
    #G92 E0
    #G1 Y140 E10 F1500 ; prime the nozzle
    #G1 X2.3 F5000
    #G92 E0
    #G1 Y10 E10 F1200 ; prime the nozzle
    #G92 E0
    #G1 Z10 F3000

[gcode_macro END_PRINT]
gcode:
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Move nozzle away from print while retracting
    G91
    G1 X-2 Y-2 E-3 F300
    # Raise nozzle by 10mm
    G1 Z20 F3000
    G90
    # Disable steppers
    M84
	EXCLUDE_OBJECT_DEFINE RESET=1

[gcode_macro LOAD_FILAMENT]
gcode:
 M83                   # Put the extruder into relative mode
 G92 E0.0              # Reset the extruder so that it thinks it is at position zero
 G1 E120 F350          # Move the extruder forward 120mm at a speed of 350mm/minute
 G92 E0.0              # Reset the extruder again
 M82                   # Put the extruder back into absolute mode.
 
[gcode_macro UNLOAD_FILAMENT]
gcode:
 M83                   # Put the extruder into relative mode
 G92 E0.0              # Reset the extruder so that it thinks it is at position zero
 G1 E-120 F350         # Move the extruder backward 120mm at a speed of 350mm/minute
 G92 E0.0              # Reset the extruder again
 M82                   # Put the extruder back into absolute mode.
 
 ## This macro is used to purge filament from a nozzle
##   before running a print.  It is typically used for
##   filament changes.
##  Parameters:
##    LENGTH:  Length of filament to purge (mm)
##   TARGET:  Target temperature to purge at (C)
[gcode_macro PURGE]
gcode:
    {% set printcfg = printer['gcode_macro _printcfg'] %} ; get printcfg variables
    {% set config = printer.configfile.settings %} ; get realtime configfile settings
    {% set LENGTH = params.LENGTH|default(printcfg.m600_purge_length)|float %} ; Purge length
    ##################
    {% set cur_temp = printer.extruder.temperature|float %} ; Current temperature
    {% set cur_targ = printer.extruder.target|int %}        ; Current target
    {% if printcfg.m600_prev_temp != 0 %}
        {% set TARGET = printcfg.m600_prev_temp %} ; Use previous temp
    {% elif params.TARGET is defined  %} ; If current temp is below target
        {% set TARGET = params.TARGET|int %} ; Use target temp parameter
    {% endif %}
    {% if printer.extruder.target < config.extruder.min_extrude_temp|int %} ; Verify extruder is hot enough
        {% set TARGET = printcfg.m600_default_temp %} ; Heat up to default temp
    {% endif %}
    {% if TARGET is not defined %} ; If target is not defined
        {% set TARGET = cur_targ %} ; Set target to current extruder heater target
    {% endif %}
    {% if printcfg.led_status == True %} ; if using LED status alerts
        {printcfg.status_heat} ; Turn on Heating LEDs
    {% endif %}
    M{printcfg.output|int} Heating nozzle
    M109 S{TARGET} ; Heat nozzle to target temperature
    {% if printcfg.led_status == True %} ; if using LED status alerts
        {printcfg.status_load} ; Turn on Loading LEDs
    {% endif %}
    M{printcfg.output|int} Purging filament
    G91 ; Relative positioning
    G1 E{LENGTH} F{printcfg.m600_slow_speed|int} ; Purge filament
    G90 ; Absolute postitioning
    M400
    M109 S{cur_targ} ; Return target temp to previous value
    M{printcfg.output|int} Purge Complete
    {% if printcfg.led_status == True %} ; if using LED status alerts
        {printcfg.status_ready} ; Turn on Ready LEDs
    {% endif %}

## This macro is used to change the nozzle on the printer
## It prepares the printhead by heating the nozzle to the
## apppropriate temperature and unloading the filament.
## Then the printhead is parked in a convenient position for nozzle changes.
[gcode_macro NOZZLE_CHANGE]
description: Prepare the printer for a nozzle change
gcode:
    {% set printcfg = printer['gcode_macro _printcfg'] %} ; get printcfg variables
    {% set config = printer.configfile.settings %} ; get realtime configfile settings
    CG28 ; Home all axes if not already homed
    M{printcfg.output|int} Nozzle Change
    MAINTENANCE ; Park the toolhead in a convenient position
    UNLOAD_FILAMENT ; Unload filament
    M{printcfg.output|int} Change nozzle now and run NOZZLE_CHANGE_DONE when finished
	
[gcode_macro NOZZLE_CHANGE_DONE]
description: Complete the nozzle change
gcode:
    {% set printcfg = printer['gcode_macro _printcfg'] %} ; get printcfg variables
    {% set config = printer.configfile.settings %} ; get realtime configfile settings
    LOAD_FILAMENT ; Load filament
    M104 S0 ; Turn off extruder heater
    M{printcfg.output|int} Nozzle Change Complete
	
[gcode_macro MAINTENANCE]
description: move the toolhead to a convenient position for working on it
gcode:
    {% set printcfg = printer['gcode_macro _printcfg'] %} ; get printcfg variables
    {% set config = printer.configfile.settings %} ; get realtime configfile settings
    {% set max_x = config["stepper_x"]["position_max"]|float %} ; get max x position
    {% set max_y = config["stepper_y"]["position_max"]|float %} ; get max y position
    {% set max_z = config["stepper_z"]["position_max"]|float %} ; get max z position
    {% set mid_x = max_x / 2.0 %} ; get middle of x axis
    {% set mid_y = max_y / 2.0 %} ; get middle of y axis
    {% set mid_z = max_z / 2.0 %} ; get middle of z axis
    {% if printcfg.maint_x < 0 or printcfg.maint_y < 0 or printcfg.maint_z < 0 %} ; if maintenance position is not defined move to middle of bed
        {% set move_x = mid_x %} ; use middle of x axis
        {% set move_y = mid_y %} ; use middle of y axis
        {% set move_z = mid_z %} ; use middle of z axis
    {% else %} ; otherwise,  move to defined positions
        {% set move_x = printcfg.maint_x %} ; get maintenance x position
        {% set move_y = printcfg.maint_y %} ; get maintenance y position
        {% set move_z = printcfg.maint_z %} ; get maintenance z position
    {% endif %}
    {% if printcfg.led_status == True %} ; if using LED status alerts
        {printcfg.status_busy} ; Turn on Busy LEDs
    {% endif %}
    CG28 ; Home all axes (if not already homed)
    G0 X{move_x} Y{move_y} Z{move_z} F3000 ; Move to maintenance position
    G4 P50 ; Dwell for 50ms
    M400 ; Wait for moves to finish
    M{printcfg.output|int} Maintenance position reached
    {% if printcfg.led_status == True %} ; if using LED status alerts
        {printcfg.status_ready} ; Turn on Ready LEDs
    {% endif %}

[gcode_macro DRIVER_TEMPS]
description: Print driver stats
gcode:
    {% set printcfg = printer['gcode_macro _printcfg'] %} ; get printcfg variables
    {% set config = printer.configfile.settings %} ; get realtime configfile settings
    {% if printcfg.driver_x == 'tmc2240' %}
        ## Set tmc drivers
        {% set tmc_x = printcfg.driver_x + " stepper_x" %}
        {% set x_temp = printer[tmc_x].temperature %}
        {% if x_temp|lower != 'none' %}
            ## Output temperature
            { action_respond_info( "X driver temperature: {}°C".format(x_temp) ) }
        {% else %}
            M{printcfg.output|int} "X driver temperature: N/A"
        {% endif %}
    {% else %}
        M{printcfg.output|int} "X driver temperature: N/A"
    {% endif %}
    {% if printcfg.driver_y == 'tmc2240' %}
        ## Set tmc drivers
        {% set tmc_y = printcfg.driver_y + " stepper_y" %}
        {% set y_temp = printer[tmc_y].temperature %}
        {% if y_temp|lower != 'none' %}
            ## Output temperature
            { action_respond_info( "Y driver temperature: {}°C".format(y_temp) ) }
        {% else %}
            M{printcfg.output|int} "Y driver temperature: N/A"
        {% endif %}
    {% else %}
        M{printcfg.output|int} "Y driver temperature: N/A"
    {% endif %}

# MACROS - - - - - - - - - - - - - SECTION END

[BDsensor]
# Don't use aliases for the board pins
sda_pin: ^PB6
scl_pin: ^PB7
delay: 10 # you can set it 10 if the BDsensor version is >=1.2
z_offset: 0 #  within -0.6 to 0.6mm
x_offset: 0
y_offset: 22.5
no_stop_probe: # fast probe that the toolhead will not stop at the probe point,disable it by commenting out.
position_endstop: 1.2 #the triggered position, recommend value is 1~2.8
collision_homing:1 #  set it 1 to enable homing with nozzle collision sensing.
collision_calibrate:1 # set it 1 to enable auto calibrate BDsensor with nozzle collision sensing.

[exclude_object]

[gcode_arcs]
resolution: 0.25

[virtual_sdcard]
path: /home/pi/printer_data/gcodes
[include TEST_SPEED.cfg]

[force_move]
enable_force_move:true

[bed_mesh]
horizontal_move_z: 1 
zero_reference_position: 117.5,117.5
speed: 50
mesh_min: 25,25
mesh_max: 202.5,202.5
probe_count: 15
algorithm: bicubic

[safe_z_home]
home_xy_position:117.5,117.5
#   A X, Y coordinate (e.g. 100, 100) where the Z homing should be
#   performed. This parameter must be provided.
speed: 50.0
#   Speed at which the toolhead is moved to the safe Z home
#   coordinate. The default is 50 mm/s
z_hop:5
#   Distance (in mm) to lift the Z axis prior to homing. This is
#   applied to any homing command, even if it doesn't home the Z axis.
#   If the Z axis is already homed and the current Z position is less
#   than z_hop, then this will lift the head to a height of z_hop. If
#   the Z axis is not already homed the head is lifted by z_hop.
#   The default is to not implement Z hop.
z_hop_speed: 15.0
#   Speed (in mm/s) at which the Z axis is lifted prior to homing. The
#   default is 15 mm/s.
#move_to_previous: False
#   When set to True, the X and Y axes are reset to their previous
#   positions after Z axis homing. The default is False.

[printer]
kinematics: corexy
max_velocity: 400
max_accel: 25000
max_z_velocity: 5
max_z_accel: 100

[skew_correction]

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=PC5

# See the sample-lcd.cfg file for definitions of common LCD displays.

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.079352, -0.079352, -0.069352, -0.049352, -0.049352, -0.039352, -0.039352, -0.069352, -0.079352, -0.079352, -0.079352, -0.089352, -0.089352, -0.099352, -0.099352
#*# 	  -0.079352, -0.079352, -0.069352, -0.069352, -0.049352, -0.039352, -0.029352, -0.039352, -0.069352, -0.049352, -0.079352, -0.079352, -0.089352, -0.089352, -0.089352
#*# 	  -0.089352, -0.079352, -0.079352, -0.049352, -0.049352, -0.029352, -0.019352, -0.039352, -0.049352, -0.049352, -0.079352, -0.079352, -0.079352, -0.079352, -0.079352
#*# 	  -0.089352, -0.079352, -0.069352, -0.049352, -0.039352, -0.029352, -0.019352, -0.029352, -0.039352, -0.039352, -0.049352, -0.049352, -0.069352, -0.049352, -0.069352
#*# 	  -0.089352, -0.079352, -0.069352, -0.039352, -0.039352, -0.029352, -0.019352, -0.039352, -0.039352, -0.039352, -0.049352, -0.039352, -0.039352, -0.049352, -0.039352
#*# 	  -0.079352, -0.069352, -0.049352, -0.029352, -0.009352, -0.009352, -0.009352, -0.029352, -0.039352, -0.029352, -0.039352, -0.029352, -0.029352, -0.029352, -0.039352
#*# 	  -0.079352, -0.049352, -0.039352, -0.009352, 0.010648, 0.020648, 0.010648, -0.009352, -0.019352, -0.009352, -0.019352, -0.019352, -0.009352, -0.009352, -0.009352
#*# 	  -0.069352, -0.039352, -0.019352, 0.010648, 0.050648, 0.060648, 0.030648, 0.000648, -0.009352, 0.000648, -0.009352, -0.009352, -0.009352, 0.000648, -0.009352
#*# 	  -0.049352, -0.039352, -0.019352, 0.000648, 0.020648, 0.030648, 0.050648, 0.010648, 0.000648, 0.010648, 0.000648, 0.000648, 0.010648, 0.010648, 0.010648
#*# 	  -0.049352, -0.039352, -0.029352, -0.009352, 0.010648, 0.010648, 0.020648, 0.000648, 0.000648, 0.010648, 0.000648, 0.010648, 0.010648, 0.020648, 0.020648
#*# 	  -0.049352, -0.039352, -0.039352, -0.019352, -0.009352, -0.009352, 0.000648, 0.000648, 0.000648, 0.020648, 0.010648, 0.010648, 0.020648, 0.020648, 0.030648
#*# 	  -0.049352, -0.039352, -0.039352, -0.019352, -0.009352, -0.009352, 0.000648, 0.010648, 0.010648, 0.020648, 0.010648, 0.020648, 0.020648, 0.030648, 0.030648
#*# 	  -0.049352, -0.039352, -0.039352, -0.019352, -0.019352, -0.009352, 0.000648, 0.000648, 0.000648, 0.010648, 0.010648, 0.020648, 0.030648, 0.050648, 0.030648
#*# 	  -0.039352, -0.039352, -0.029352, -0.019352, -0.009352, 0.000648, 0.020648, 0.020648, 0.010648, 0.030648, 0.020648, 0.030648, 0.050648, 0.060648, 0.060648
#*# 	  -0.029352, -0.029352, -0.019352, -0.009352, -0.009352, 0.000648, 0.010648, 0.020648, 0.010648, 0.030648, 0.030648, 0.050648, 0.050648, 0.060648, 0.070648
#*# x_count = 15
#*# y_count = 15
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 25.0
#*# max_x = 202.38
#*# min_y = 25.0
#*# max_y = 202.37999999999994
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 37.952
#*# pid_ki = 14.056
#*# pid_kd = 25.617
#*#
#*# [skew_correction my_skew_profile]
#*# xy_skew = 0.005184526316124095
#*# xz_skew = 0.0
#*# yz_skew = 0.0
